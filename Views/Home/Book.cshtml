
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Book</title>
    <link href="~/content/plugins/layui/css/layui.css" rel="stylesheet" />

    <script src="~/content/plugins/jquery.min.js"></script>
    <script src="~/content/plugins/layui/layui.js"></script>
    <script src="~/js/Book.js"></script>
</head>
<body>
    <div style="width: 100%; height: 100%;">
        <table id="demo" class="layui-table" lay-filter="test"></table>
    </div>

    @*头部工具栏*@
    <script type="text/html" id="toolbarDemo">
        <div class="layui-btn-container">
            <button class="layui-btn layui-btn-sm" lay-event="getCheckAdd">添加</button>
            <button class="layui-btn layui-btn-sm" lay-event="getCheckDel">删除</button>
        </div>
    </script>

    @*行工具栏*@
    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    </script>

    <script>
        //wpage当前页码, wlimit当前页的具体行数, defLimit设置每页应该显示的数据行数
        var layer, wpage, wlimit, defLimit;

        layui.use('layer', function () {
            layer = layui.layer;
        });

        $(document).ready(function () {

            Book();

        });

        layui.use('table', function () {
            var table = layui.table;

            //头工具栏  test: lay-filter="test"
            table.on('toolbar(test)', function (obj) {
                //checkStatus = {"data": [], "isAll": false/true}  obj.config.id table.render事件的ID
                var checkStatus = table.checkStatus(obj.config.id);

                switch (obj.event) {
                    case 'getCheckAdd':  //添加
                        var Addbook = layer.open({
                            title: '添加',
                            type: 2,
                            area: ['50%', '80%'],
                            fixed: false,
                            maxmin: true,
                            scrollbar: true,
                            content: 'Addbook',
                            anim: 5,
                            end: function () {
                                //如果当前页显示的数据行数未超过默认显示的数据行数，则添加数据后重载表格
                                if ((defLimit > wlimit) || (defLimit == 0)) {
                                    var TableID = 'BookTable';
                                    var pageNumber = wpage;
                                    TableLoad(TableID, pageNumber);
                                }
                            }
                        });
                        break;
                    case 'getCheckDel':  //删除
                        if (checkStatus.data.length > 0) {
                            var numberId = [];  //删除数据的ID数组

                            for (var i = 0; i < checkStatus.data.length; i++) {
                                numberId[i] = checkStatus.data[i].BookId;
                            }

                            if (numberId.length > 0) {
                                var JsonData = { numberId: numberId };
                                var BookMethod = DeleteBook;
                                ajax("PUT", "BookDelete", JsonData, BookMethod);
                            }
                            else {
                                layer.alert('获取将要删除数据的ID失败', { icon: 5 });
                            }
                            
                        }
                        else {
                            layer.alert('请先选择您要删除的数据', { icon: 5 });
                        }
                        break;
                    default:
                        layer.alert('事件获取失败', { icon: 5 });
                        break;
                };
            });

            //行工具栏  test: lay-filter="test"
            table.on('tool(test)', function (obj) {

                if (obj.event === 'edit') {  //编辑

                    var editBook = layer.open({
                        title: '编辑',
                        type: 2,
                        area: ['50%', '80%'],
                        anim: 5,
                        maxmin: true,
                        scrollbar: true,
                        content: 'AlterBook?ID=' + obj.data.BookId,
                        end: function () {
                            var TableID = 'BookTable';
                            var pageNumber = wpage;
                            TableLoad(TableID, pageNumber);
                        }
                    });
                }
                else if (obj.event === 'del') {  //删除

                    var index = layer.confirm('确定删除？', {
                        btn: ['确定', '取消']
                    }, function () {
                            var JsonData = { ID: obj.data.BookId };
                            var BookMethod = DelBookOne;
                            ajax("PUT", "DelBookOne", JsonData, BookMethod);
                    });
                }
            });
        });
    </script>
</body>
</html>
